{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao_\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ConectandoProjeto\\\\Conectando\\\\Sprint-3\\\\conectando\\\\src\\\\pages\\\\Matheus\\\\CadastrarVagas\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { FiArrowLeft, FiAlertCircle } from 'react-icons/fi';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../../../components/inputs/index';\nimport './style.css';\nimport Axios from 'axios';\n\nfunction CadastrarVagas() {\n  const novaVaga = {\n    nome: '',\n    area: '',\n    requisitos: '',\n    detalhes: '',\n    beneficios: '',\n    salario: '',\n    tipoContrato: '',\n    nivelExp: '',\n    prazo: '',\n    limiteAlunos: '',\n    remoto: '',\n    horario: '',\n    idEmpresa: '',\n    idEnderecoNavigation: {\n      uf: '',\n      cidade: '',\n      cep: '',\n      bairro: '',\n      rua: '',\n      numero: '',\n      complemento: ''\n    }\n  };\n  const history = useHistory();\n  const [idEnderecoNavigation, setIdEnderecoNavigation] = useState([]);\n  const [uf, setUf] = useState(\"\");\n  const [cidade, setCidade] = useState(\"\");\n  const [cep, setCep] = useState(\"\");\n  const [rua, setRua] = useState(\"\");\n  const [bairro, setBairro] = useState(\"\");\n  const [numero, setNumero] = useState(\"\");\n  const [options, setOptions] = useState([{}, []]);\n\n  const GetCep = valor => {\n    Axios.get(`https://viacep.com.br/ws/${valor}/json/`).then(res => {\n      var teste = res.data.cep;\n      var cep = teste.replace(\"-\", \"\");\n      setCep(cep);\n      setRua(res.data.logradouro);\n      setBairro(res.data.bairro);\n      setCidade(res.data.localidade);\n      setUf(res.data.uf);\n    }).catch(erro => console.error(erro));\n  };\n\n  const api = Axios.create({\n    baseURL: \"http://localhost:5000/api\",\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(\"conectando-key-auth\")\n    }\n  });\n  useEffect(() => {\n    BuscarTags();\n  }, []);\n  var optionsBanco = []; //Formata um array para ser usado pelo react-select\n\n  const Montar = e => {\n    e.forEach(element => {\n      optionsBanco.push({\n        value: element.idTags,\n        label: element.nome\n      });\n    });\n  }; //Cadastrar TagVaga\n\n\n  const CadastrarTagVaga = idVaga => {\n    let tagsPorName = document.getElementsByName('tags');\n    let t = document.getElementsByClassName('css-1rhbuit-multiValue select__multi-value');\n    console.log(t);\n    console.log(t[0][0]);\n\n    for (let index = 0; index < tagsPorName.length; index++) {\n      console.log(tagsPorName[index]);\n      const tagsVaga = {\n        idVaga: idVaga,\n        idTags: tagsPorName[index].attributes[2].value\n      };\n      console.log(tagsVaga);\n      api.post(\"/TagsVaga\", JSON.stringify(tagsVaga));\n    }\n  }; //Busca todas as tags\n\n\n  const BuscarTags = () => {\n    api.get(\"/Tags\").then(dados => {\n      Montar(dados.data);\n    }).catch(erro => console.error(erro));\n  }; //Cadastra as Vagas\n\n\n  const CadastrarVagas = values => {\n    let vagaCadastrar = novaVaga;\n    console.log(vagaCadastrar);\n    api.post(\"/Vaga\", vagaCadastrar).then(dados => {\n      console.log(dados.data);\n      CadastrarTagVaga(dados.data);\n    }).catch(erro => console.error(erro));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cadastroVagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    className: \"iconVoltar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textHeaderCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Cadaste sua Vaga!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"O primeiro passo \\xE9 preencher esse formul\\xE1rio de cadastro.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formularioCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Seus dados\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divisao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      area: '',\n      requisitos: '',\n      detalhes: '',\n      beneficios: '',\n      salario: '',\n      tipoContrato: '',\n      nivelExp: '',\n      prazo: '',\n      limiteAlunos: '',\n      remoto: '',\n      horario: '',\n      idEmpresa: '',\n      uf: '',\n      cidade: '',\n      cep: '',\n      bairro: '',\n      rua: '',\n      numero: '',\n      complemento: ''\n    },\n    validationSchema: Yup.object({\n      nome: Yup.string().required('Required'),\n      area: Yup.string().required('Required'),\n      requisitos: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\n      detalhes: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\n      beneficios: Yup.string().required('Required'),\n      salario: Yup.number().required('Required'),\n      tipoContrato: Yup.string().required('Required'),\n      nivelExp: Yup.string().required('Required'),\n      prazo: Yup.date().required('Required'),\n      limiteAlunos: Yup.number().notRequired(),\n      remoto: Yup.string().required('Required'),\n      horario: Yup.string().required('Required'),\n      idEmpresa: Yup.number(),\n      uf: Yup.string().required('Required'),\n      cidade: Yup.string().required('Required'),\n      cep: Yup.string().required('Required'),\n      bairro: Yup.string().required('Required'),\n      rua: Yup.string().required('Required'),\n      numero: Yup.string().required('Required'),\n      complemento: Yup.string().required('Required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      novaVaga.nome = values.nome;\n      novaVaga.area = values.area;\n      novaVaga.requisitos = values.requisitos;\n      novaVaga.detalhes = values.detalhes;\n      novaVaga.beneficios = values.beneficios;\n      novaVaga.salario = values.salario;\n      novaVaga.tipoContrato = values.tipoContrato;\n      novaVaga.nivelExp = values.nivelExp;\n      novaVaga.prazo = values.prazo;\n      novaVaga.limiteAlunos = values.limiteAlunos;\n      novaVaga.horario = values.horario;\n      novaVaga.idEnderecoNavigation.cep = values.cep;\n      novaVaga.idEnderecoNavigation.uf = values.uf;\n      novaVaga.idEnderecoNavigation.cidade = values.cidade;\n      novaVaga.idEnderecoNavigation.complemento = values.complemento;\n      novaVaga.idEnderecoNavigation.numero = values.numero;\n      novaVaga.idEnderecoNavigation.rua = values.rua;\n      novaVaga.idEnderecoNavigation.bairro = values.bairro;\n      const token = localStorage.getItem('token-conectando');\n\n      if (token !== null) {\n        values.idEmpresa = JSON.parse(window.atob(token.split('.')[1])).jti;\n      }\n\n      CadastrarVagas(values);\n      setTimeout(() => {\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"nome\",\n    label: \"Nome da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"area\",\n    label: \"\\xC1rea da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Requisitos\",\n    as: \"textarea\",\n    name: \"requisitos\",\n    id: \"requisitos\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Detalhes Vaga\",\n    as: \"textarea\",\n    name: \"detalhes\",\n    id: \"detalhes\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"beneficios\",\n    label: \"Beneficios\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"0\",\n    name: \"salario\",\n    label: \"Sal\\xE1rio\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tipoContrato\",\n    label: \"Tipo de Contrato\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"nivelExp\",\n    label: \"N\\xEDvel da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"prazo\",\n    type: \"date\",\n    label: \"Prazo inscri\\xE7\\xF5es\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"0\",\n    name: \"limiteAlunos\",\n    label: \"Limite inscri\\xE7\\xF5es\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"remoto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, \"Trabalhar remoto?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 82\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"remoto\",\n    id: \"remoto\",\n    className: \"input1 input1-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }, \"Selecione uma op\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"Sim\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  }, \"N\\xE3o\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"remoto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    name: \"horario\",\n    label: \"Hor\\xE1rio\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"tags\",\n    isMulti: true,\n    options: optionsBanco,\n    id: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    name: \"cep\",\n    type: \"number\",\n    label: \"CEP\",\n    className: \"input1\",\n    onBlur: e => GetCep(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"uf\",\n    label: \"UF\",\n    className: \"input1\",\n    value: uf,\n    onBlur: e => setUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"cidade\",\n    label: \"Cidade\",\n    className: \"input1\",\n    value: cidade,\n    onBlur: e => setCidade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"bairro\",\n    label: \"Bairro\",\n    className: \"input1\",\n    value: bairro,\n    onBlur: e => setBairro(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"rua\",\n    label: \"Rua\",\n    className: \"input1\",\n    value: rua,\n    onBlur: e => setRua(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"numero\",\n    type: \"number\",\n    label: \"N\\xFAmero\",\n    className: \"input1\",\n    onBlur: e => setNumero(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"complemento\",\n    label: \"Complemento\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alerta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    className: \"alertaCirculo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, \"Preencha todos os campos\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttonEnviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, \"Cadastrar\"))))));\n}\n\nexport default CadastrarVagas;","map":{"version":3,"sources":["C:/Users/joao_/OneDrive/Área de Trabalho/ConectandoProjeto/Conectando/Sprint-3/conectando/src/pages/Matheus/CadastrarVagas/index.tsx"],"names":["React","useEffect","useState","FiArrowLeft","FiAlertCircle","Formik","Field","Form","ErrorMessage","Yup","Select","useHistory","Input","Axios","CadastrarVagas","novaVaga","nome","area","requisitos","detalhes","beneficios","salario","tipoContrato","nivelExp","prazo","limiteAlunos","remoto","horario","idEmpresa","idEnderecoNavigation","uf","cidade","cep","bairro","rua","numero","complemento","history","setIdEnderecoNavigation","setUf","setCidade","setCep","setRua","setBairro","setNumero","options","setOptions","GetCep","valor","get","then","res","teste","data","replace","logradouro","localidade","catch","erro","console","error","api","create","baseURL","headers","authorization","localStorage","getItem","BuscarTags","optionsBanco","Montar","e","forEach","element","push","value","idTags","label","CadastrarTagVaga","idVaga","tagsPorName","document","getElementsByName","t","getElementsByClassName","log","index","length","tagsVaga","attributes","post","JSON","stringify","dados","values","vagaCadastrar","object","string","required","max","number","date","notRequired","setSubmitting","token","parse","window","atob","split","jti","setTimeout","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FiArrowLeft, FiAlertCircle } from 'react-icons/fi';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Input from '../../../components/inputs/index';\r\n\r\nimport './style.css';\r\n\r\nimport Axios from 'axios';\r\n\r\nfunction CadastrarVagas() {\r\n\r\n    const novaVaga = {\r\n        nome: '',\r\n        area: '',\r\n        requisitos: '',\r\n        detalhes: '',\r\n        beneficios: '',\r\n        salario: '',\r\n        tipoContrato: '',\r\n        nivelExp: '',\r\n        prazo: '',\r\n        limiteAlunos: '',\r\n        remoto: '',\r\n        horario: '',\r\n        idEmpresa: '',\r\n        idEnderecoNavigation : {\r\n            uf: '',\r\n            cidade: '',\r\n            cep: '',\r\n            bairro: '',\r\n            rua: '',\r\n            numero: '',\r\n            complemento: ''\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n    \r\n\r\n    const [idEnderecoNavigation, setIdEnderecoNavigation] = useState([]);\r\n    const [uf, setUf] = useState(\"\");\r\n    const [cidade, setCidade] = useState(\"\");\r\n    const [cep, setCep] = useState(\"\");\r\n    const [rua, setRua] = useState(\"\");\r\n    const [bairro, setBairro] = useState(\"\");\r\n    const [numero, setNumero] = useState(\"\");\r\n    const [options, setOptions] = useState([{}, []]);\r\n\r\n    const GetCep = (valor: string) => {\r\n        Axios.get(`https://viacep.com.br/ws/${valor}/json/`)\r\n            .then(res => {\r\n                var teste = res.data.cep;\r\n                var cep = teste.replace(\"-\", \"\")\r\n\r\n                setCep(cep);\r\n                setRua(res.data.logradouro);\r\n                setBairro(res.data.bairro);\r\n                setCidade(res.data.localidade)\r\n                setUf(res.data.uf)\r\n            })\r\n            .catch(erro => console.error(erro))\r\n    }\r\n\r\n    const api = Axios.create({\r\n        baseURL: \"http://localhost:5000/api\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(\"conectando-key-auth\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        BuscarTags();\r\n    }, [])\r\n\r\n    var optionsBanco: { value: any; label: any; }[] = []\r\n\r\n\r\n    //Formata um array para ser usado pelo react-select\r\n    const Montar = (e: any) => {\r\n        e.forEach((element: { idTags: any; nome: any; }) => {\r\n            optionsBanco.push({ value: element.idTags, label: element.nome });\r\n        });\r\n    }\r\n\r\n    //Cadastrar TagVaga\r\n    const CadastrarTagVaga = (idVaga: any) => {\r\n        let tagsPorName = document.getElementsByName('tags');\r\n        let t = document.getElementsByClassName('css-1rhbuit-multiValue select__multi-value');\r\n        console.log(t)\r\n        console.log(t[0][0])\r\n        for (let index = 0; index < tagsPorName.length; index++) {\r\n            \r\n            console.log(tagsPorName[index])\r\n            const tagsVaga = { idVaga: idVaga, idTags: tagsPorName[index].attributes[2].value }\r\n            console.log(tagsVaga)\r\n\r\n\r\n            api.post(\"/TagsVaga\", JSON.stringify(tagsVaga))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    //Busca todas as tags\r\n    const BuscarTags = () => {\r\n\r\n        api.get(\"/Tags\")\r\n            .then(dados => {\r\n                Montar(dados.data)\r\n            })\r\n            .catch(erro => console.error(erro));\r\n    }\r\n\r\n\r\n    //Cadastra as Vagas\r\n    const CadastrarVagas = (values: any) => {\r\n        let vagaCadastrar = novaVaga\r\n        console.log(vagaCadastrar)\r\n        api.post(\"/Vaga\", vagaCadastrar)\r\n            .then(dados => {\r\n                console.log(dados.data)\r\n                CadastrarTagVaga(dados.data)\r\n            })\r\n            .catch(erro => console.error(erro));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cadastroVagas\">\r\n            <div className=\"headerCadastro\">\r\n                <FiArrowLeft className=\"iconVoltar\" />\r\n\r\n                <div className=\"textHeaderCadastro\">\r\n                    <h1>Cadaste sua Vaga!</h1>\r\n                    <p>O primeiro passo é preencher esse formulário de cadastro.</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"formularioCadastro\">\r\n                <h2>Seus dados</h2>\r\n\r\n                <div className=\"divisao\"></div>\r\n\r\n                <Formik\r\n                    initialValues={\r\n                        {\r\n                            nome: '',\r\n                            area: '',\r\n                            requisitos: '',\r\n                            detalhes: '',\r\n                            beneficios: '',\r\n                            salario: '',\r\n                            tipoContrato: '',\r\n                            nivelExp: '',\r\n                            prazo: '',\r\n                            limiteAlunos: '',\r\n                            remoto: '',\r\n                            horario: '',\r\n                            idEmpresa: '',\r\n                            uf: '',\r\n                            cidade: '',\r\n                            cep: '',\r\n                            bairro: '',\r\n                            rua: '',\r\n                            numero: '',\r\n                            complemento: ''\r\n\r\n                        }}\r\n                    validationSchema={Yup.object({\r\n                        nome: Yup.string().required('Required'),\r\n                        area: Yup.string().required('Required'),\r\n                        requisitos: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\r\n                        detalhes: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\r\n                        beneficios: Yup.string().required('Required'),\r\n                        salario: Yup.number().required('Required'),\r\n                        tipoContrato: Yup.string().required('Required'),\r\n                        nivelExp: Yup.string().required('Required'),\r\n                        prazo: Yup.date().required('Required'),\r\n                        limiteAlunos: Yup.number().notRequired(),\r\n                        remoto: Yup.string().required('Required'),\r\n                        horario: Yup.string().required('Required'),\r\n                        idEmpresa: Yup.number(),\r\n                        uf: Yup.string().required('Required'),\r\n                        cidade: Yup.string().required('Required'),\r\n                        cep: Yup.string().required('Required'),\r\n                        bairro: Yup.string().required('Required'),\r\n                        rua: Yup.string().required('Required'),\r\n                        numero: Yup.string().required('Required'),\r\n                        complemento: Yup.string().required('Required'),\r\n\r\n                    })}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        novaVaga.nome = values.nome\r\n                        novaVaga.area = values.area\r\n                        novaVaga.requisitos = values.requisitos\r\n                        novaVaga.detalhes = values.detalhes\r\n                        novaVaga.beneficios = values.beneficios\r\n                        novaVaga.salario = values.salario\r\n                        novaVaga.tipoContrato = values.tipoContrato\r\n                        novaVaga.nivelExp = values.nivelExp\r\n                        novaVaga.prazo = values.prazo\r\n                        novaVaga.limiteAlunos = values.limiteAlunos\r\n                        novaVaga.horario = values.horario\r\n                        novaVaga.idEnderecoNavigation.cep = values.cep\r\n                        novaVaga.idEnderecoNavigation.uf = values.uf\r\n                        novaVaga.idEnderecoNavigation.cidade = values.cidade\r\n                        novaVaga.idEnderecoNavigation.complemento = values.complemento\r\n                        novaVaga.idEnderecoNavigation.numero = values.numero\r\n                        novaVaga.idEnderecoNavigation.rua = values.rua\r\n                        novaVaga.idEnderecoNavigation.bairro = values.bairro\r\n                        const token = localStorage.getItem('token-conectando');\r\n                        if (token !== null) {\r\n                            values.idEmpresa = JSON.parse(window.atob(token.split('.')[1])).jti\r\n                        }\r\n                        CadastrarVagas(values);\r\n                        setTimeout(() => {\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <Input name=\"nome\" label=\"Nome da Vaga\" className=\"input1\" />\r\n\r\n                        <Input name=\"area\" label=\"Área da Vaga\" className=\"input1\" />\r\n\r\n                        <Input label=\"Requisitos\" as=\"textarea\" name=\"requisitos\" id=\"requisitos\" className=\"input1\" />\r\n\r\n                        <Input label=\"Detalhes Vaga\" as=\"textarea\" name=\"detalhes\" id=\"detalhes\" className=\"input1\" />\r\n\r\n                        <Input name=\"beneficios\" label=\"Beneficios\" className=\"input1\" />\r\n\r\n                        <Input type=\"number\" min=\"0\" name=\"salario\" label=\"Salário\" className=\"input1\" />\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"tipoContrato\" label=\"Tipo de Contrato\" className=\"input1\" />\r\n                            <Input name=\"nivelExp\" label=\"Nível da Vaga\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"prazo\" type=\"date\" label=\"Prazo inscrições\" className=\"input1\" />\r\n                            <Input type=\"number\" min=\"0\" name=\"limiteAlunos\" label=\"Limite inscrições\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <div className=\"style-input\">\r\n                                <label htmlFor=\"remoto\">Trabalhar remoto?</label><br />\r\n                                <Field as=\"select\" name=\"remoto\" id=\"remoto\" className=\"input1 input1-select\">\r\n                                    <option value=\"\">Selecione uma opção</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </Field>\r\n                                <div className=\"error-message\">\r\n                                    <ErrorMessage name=\"remoto\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Input name=\"horario\" label=\"Horário\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"style-input\">\r\n                            <label htmlFor=\"tags\">Tags</label><br />\r\n                            <Select\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"tags\"\r\n                                isMulti\r\n                                options={optionsBanco}\r\n                                id=\"tags\"\r\n                            />\r\n                            <div className=\"error-message\">\r\n                                <ErrorMessage name=\"tags\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Input name=\"cep\" type=\"number\" label=\"CEP\" className=\"input1\"  onBlur={(e) => GetCep(e.target.value)}/>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"uf\" label=\"UF\" className=\"input1\" value={uf} onBlur={(e) => setUf(e.target.value)}/>\r\n                            <Input name=\"cidade\" label=\"Cidade\" className=\"input1\"  value={cidade} onBlur={(e) => setCidade(e.target.value)} />\r\n                        </div>\r\n\r\n                        <Input name=\"bairro\" label=\"Bairro\" className=\"input1\" value={bairro} onBlur={(e) => setBairro(e.target.value)}/>\r\n                        <Input name=\"rua\" label=\"Rua\" className=\"input1\" value={rua} onBlur={(e) => setRua(e.target.value)}/>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"numero\" type=\"number\" label=\"Número\" className=\"input1\" onBlur={(e) => setNumero(e.target.value)} />\r\n                            <Input name=\"complemento\" label=\"Complemento\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"div-Enviar\">\r\n                            <div className=\"alerta\">\r\n                                <FiAlertCircle className=\"alertaCirculo\" />\r\n                                <p>Preencha todos os campos</p>\r\n                            </div>\r\n\r\n                            <button type='submit' className=\"buttonEnviar\">Cadastrar</button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CadastrarVagas;"]},"metadata":{},"sourceType":"module"}