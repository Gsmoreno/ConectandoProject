{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\Ultimo Semestre\\\\Conectando\\\\Sprint-3\\\\conectando\\\\src\\\\pages\\\\CadastroEmpresa\\\\index.tsx\";\nimport React from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport Input from '../../components/inputs/index';\nimport FotoAviso from \"../../assets/images/Aviso.svg\";\nimport '../../global.css';\nimport './style.css';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport api from '../../services/api';\n\nfunction CadastroEmpresa() {\n  // useEffect(() => {\n  //     getEmpresa();\n  // }, [])\n  // const getEmpresa = () => {\n  //     api.get('/empresa')\n  //         .then(res => {\n  //         })\n  // }\n  const Schema = {\n    senha: Yup.string().required(\"This field is required\"),\n    confirmarsenha: Yup.string().when(\"senha\", {\n      is: val => val && val.length > 0 ? true : false,\n      then: Yup.string().oneOf([Yup.ref(\"senha\")], \"Both password need to be the same\")\n    })\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nomeFantasia: '',\n      razaoSocial: '',\n      porteempresa: '',\n      email: '',\n      cnpj: '',\n      cnae: '',\n      wpp: '',\n      foto: '',\n      senha: '',\n      confirmarsenha: '',\n      estado: '',\n      cidade: '',\n      cep: '',\n      bairro: '',\n      rua: '',\n      numero: ''\n    },\n    validationSchema: Yup.object({\n      nomeFantasia: Yup.string().max(20, 'Deve ter no máximo 20 caracteres').required('obrigatório'),\n      razaoSocial: Yup.string().max(20, 'Deve ter no máximo 20 caracteres').required('obrigatório'),\n      email: Yup.string().email('Email inválido').required('obrigatório'),\n      cnpj: Yup.string().max(14, 'Deve ter no máximo 14 caracteres').required('obrigatório'),\n      cnae: Yup.string().max(9, 'Deve ter no máximo 9 caracteres').length(9, 'CNAE inválido').required('obrigatório'),\n      wpp: Yup.string().min(12, 'Whatsapp inválido').required('obrigatório'),\n      senha: Yup.string().required(\"This field is required\"),\n      confirmarsenha: Yup.string().when(\"senha\", {\n        is: val => val && val.length > 0 ? true : false,\n        then: Yup.string().oneOf([Yup.ref(\"senha\")], \"Both password need to be the same\")\n      }),\n      estado: Yup.string().min(9, 'Estado inválido').required('obrigatório'),\n      cidade: Yup.string().required('obrigatório'),\n      cep: Yup.string().notRequired(),\n      bairro: Yup.string().required('obrigatório'),\n      rua: Yup.string().required('obrigatório'),\n      numero: Yup.string().required('obrigatório')\n    }),\n    onSubmit: async (data, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      await api.post('/empresa', data).then(res => {\n        res.data();\n      });\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    handleChange,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tudo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FaArrowLeft, {\n    color: \"white\",\n    size: 42,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inverter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Seja bem vindo a familia SENAI!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 73\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"O primeiro passo \\xE9 preencher esse formul\\xE1rio de cadastro.\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabelaEmpresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrumarTabela\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 41\n    }\n  }, \"Seus Dados\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Nome fantasia\",\n    name: \"nomeFantasia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Raz\\xE3o social\",\n    name: \"razaoSocial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Porte da empresa\",\n    name: \"porteempresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"CNPJ\",\n    name: \"cnpj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"CNAE\",\n    name: \"cnae\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Whatsapp\",\n    name: \"wpp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Foto\",\n    name: \"foto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"senhaEmpresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Senha\",\n    name: \"senha\",\n    onChange: handleChange,\n    value: values.senha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Confirme sua senha\",\n    name: \"confirmarsenha\",\n    onChange: handleChange,\n    value: values.confirmarsenha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }, \"Seu endere\\xE7o\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"estadoEmpresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Estado\",\n    name: \"estado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Cidade\",\n    name: \"cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    label: \"CEP\",\n    name: \"cep\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Bairro\",\n    name: \"bairro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"numeroEmpresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Rua\",\n    name: \"rua\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"N\\xFAmero\",\n    name: \"numero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"together\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: FotoAviso,\n    alt: \"aviso\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }\n  }, \"Preencha todos \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 59\n    }\n  }), \" os campos\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, \"Cadastrar\")))))));\n}\n\nexport default CadastroEmpresa;","map":{"version":3,"sources":["C:/Users/Lucas/Desktop/Ultimo Semestre/Conectando/Sprint-3/conectando/src/pages/CadastroEmpresa/index.tsx"],"names":["React","FaArrowLeft","Input","Formik","Form","Yup","api","CadastroEmpresa","Schema","senha","string","required","confirmarsenha","when","is","val","length","then","oneOf","ref","nomeFantasia","razaoSocial","porteempresa","email","cnpj","cnae","wpp","foto","estado","cidade","cep","bairro","rua","numero","object","max","min","notRequired","data","setSubmitting","post","res","values","errors","handleChange","isSubmitting","FotoAviso"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\n\r\nimport Button from '../../components/Button';\r\nimport Input from '../../components/inputs/index';\r\nimport FotoAviso from '../../assets/images/Aviso.svg'\r\n\r\nimport '../../global.css';\r\nimport './style.css';\r\n\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport api from '../../services/api';\r\nimport { isConstructorDeclaration } from 'typescript';\r\n\r\n\r\n\r\n\r\nfunction CadastroEmpresa() {\r\n\r\n    // useEffect(() => {\r\n    //     getEmpresa();\r\n    // }, [])\r\n\r\n    // const getEmpresa = () => {\r\n    //     api.get('/empresa')\r\n    //         .then(res => {\r\n\r\n    //         })\r\n    // }\r\n\r\n    const Schema = {\r\n        senha: Yup.string().required(\"This field is required\"),\r\n        confirmarsenha: Yup.string().when(\"senha\", {\r\n          is: val => (val && val.length > 0 ? true : false),\r\n          then: Yup.string().oneOf(\r\n            [Yup.ref(\"senha\")],\r\n            \"Both password need to be the same\"\r\n          )\r\n        })\r\n      };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={\r\n                {\r\n                    nomeFantasia: '',\r\n                    razaoSocial: '',\r\n                    porteempresa: '',\r\n                    email: '',\r\n                    cnpj: '',\r\n                    cnae: '',\r\n                    wpp: '',\r\n                    foto: '',\r\n                    senha: '',\r\n                    confirmarsenha: '',\r\n                    estado: '',\r\n                    cidade: '',\r\n                    cep: '',\r\n                    bairro: '',\r\n                    rua: '',\r\n                    numero: ''\r\n                }}\r\n            validationSchema={Yup.object({\r\n                nomeFantasia: Yup.string()\r\n                    .max(20, 'Deve ter no máximo 20 caracteres')\r\n                    .required('obrigatório'),\r\n                razaoSocial: Yup.string()\r\n                    .max(20, 'Deve ter no máximo 20 caracteres')\r\n                    .required('obrigatório'),\r\n                email: Yup.string()\r\n                    .email('Email inválido')\r\n                    .required('obrigatório'),\r\n                cnpj: Yup.string()\r\n                    .max(14, 'Deve ter no máximo 14 caracteres')\r\n                    .required('obrigatório'),\r\n                cnae: Yup.string()\r\n                    .max(9, 'Deve ter no máximo 9 caracteres')\r\n                    .length(9, 'CNAE inválido')\r\n                    .required('obrigatório'),\r\n                wpp: Yup.string()\r\n                    .min(12, 'Whatsapp inválido')\r\n                    .required('obrigatório'),  senha: Yup.string().required(\"This field is required\"),\r\n                    confirmarsenha: Yup.string().when(\"senha\", {\r\n                      is: val => (val && val.length > 0 ? true : false),\r\n                      then: Yup.string().oneOf(\r\n                        [Yup.ref(\"senha\")],\r\n                        \"Both password need to be the same\"\r\n                      )\r\n                    }),\r\n                estado: Yup.string()\r\n                    .min(9, 'Estado inválido')\r\n                    .required('obrigatório'),\r\n                cidade: Yup.string()\r\n                    .required('obrigatório'),\r\n                cep: Yup.string()\r\n                    .notRequired(),\r\n                bairro: Yup.string()\r\n                    .required('obrigatório'),\r\n                rua: Yup.string()\r\n                    .required('obrigatório'),\r\n                numero: Yup.string()\r\n                    .required('obrigatório'),\r\n            })}\r\n            onSubmit={async (data, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                await api.post('/empresa', data)\r\n                    .then(res => {\r\n\r\n                        res.data();\r\n                    })\r\n                setSubmitting(false);\r\n            }}\r\n        >\r\n            {({ values, errors, handleChange, isSubmitting }) => (\r\n                <div className=\"tudo\" >\r\n\r\n                    <header>\r\n                        <div className=\"midCadastro\">\r\n                            <div className=\"arrow\">\r\n                                <FaArrowLeft color=\"white\" size={42} />\r\n                            </div>\r\n                            <div className=\"inverter\">\r\n                                <h1>Seja bem vindo a familia SENAI!</h1><br />\r\n                                <h3>O primeiro passo é preencher esse formulário de cadastro.</h3>\r\n                            </div>\r\n\r\n                            <Form>\r\n\r\n                                <div className=\"tabelaEmpresa\">\r\n                                    <div className=\"arrumarTabela\">\r\n                                        <h2>Seus Dados</h2>\r\n                                        <div id=\"linha\"></div>\r\n\r\n                                        <Input label=\"Nome fantasia\" name=\"nomeFantasia\" />\r\n                                        <Input label=\"Razão social\" name=\"razaoSocial\" />\r\n                                        <Input label=\"Porte da empresa\" name=\"porteempresa\" />\r\n                                        <Input label=\"Email\" name=\"email\" />\r\n                                        <Input label=\"CNPJ\" name=\"cnpj\" />\r\n                                        <Input label=\"CNAE\" name=\"cnae\" />\r\n                                        <Input label=\"Whatsapp\" name=\"wpp\" />\r\n                                        <Input label=\"Foto\" name=\"foto\" />\r\n\r\n                                        <div className=\"senhaEmpresa\">\r\n                                            <Input label=\"Senha\" name=\"senha\" onChange={handleChange} value={values.senha}/>\r\n                                            <Input label=\"Confirme sua senha\" name=\"confirmarsenha\" onChange={handleChange} value={values.confirmarsenha}/>\r\n                                        </div>\r\n                            \r\n                                    \r\n                                        <h2>Seu endereço</h2>\r\n                                        <div id=\"linha\"></div>\r\n                                        <div id=\"estadoEmpresa\">\r\n                                            <Input label=\"Estado\" name=\"estado\" />\r\n                                            <Input label=\"Cidade\" name=\"cidade\" />\r\n                                        </div>\r\n                                        <Input label=\"CEP\" name=\"cep\" />\r\n                                        <Input label=\"Bairro\" name=\"bairro\" />\r\n                                        <div id=\"numeroEmpresa\">\r\n                                            <Input label=\"Rua\" name=\"rua\" />\r\n                                            <Input label=\"Número\" name=\"numero\" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bottom\">\r\n                                    <div id=\"together\">\r\n                                        <img src={FotoAviso} alt=\"aviso\" />\r\n                                        <p>Preencha todos <br /> os campos</p>\r\n                                    </div>\r\n                                    <button type=\"submit\" disabled={isSubmitting}>Cadastrar</button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default CadastroEmpresa; "]},"metadata":{},"sourceType":"module"}