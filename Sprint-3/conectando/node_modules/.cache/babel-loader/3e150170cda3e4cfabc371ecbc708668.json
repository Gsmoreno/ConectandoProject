{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gugus\\\\Desktop\\\\Conectando\\\\Sprint-3\\\\conectando\\\\src\\\\pages\\\\cadastroAdm\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\n// import Button from '../../components/Button';\nimport Input from '../../components/inputs/index';\nimport FotoAviso from \"../../assets/images/Aviso.svg\";\nimport Helmet from 'react-helmet';\nimport * as Yup from 'yup';\nimport '../../global.css';\nimport './style.css';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { Formik, Form } from 'formik';\n\nfunction CadastroAdm() {\n  const [nome, setNome] = useState(\"\");\n  const [cpf, setCpf] = useState(\"\");\n  const [rg, setRg] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const history = useHistory();\n  const dataAdm = {\n    nome,\n    cpf,\n    rg,\n    email,\n    senha\n  };\n  const api = Axios.create({\n    baseURL: \"http://localhost:5000/api\",\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(\"token-conectando\")\n    }\n  });\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      email: '',\n      senha: '',\n      rg: '',\n      cpf: '',\n      cSenha: ''\n    },\n    validationSchema: Yup.object({\n      nome: Yup.string().max(15, 'Deve ter no máximo 15 caractéres').required('Required'),\n      cpf: Yup.string().length(11, 'CPF inválido').required('Required'),\n      rg: Yup.string().length(12, 'Tamanho inválido').required('Required'),\n      email: Yup.string().email('email inválido').required('Required'),\n      senha: Yup.string().min(3, 'Tamanho deve ser entre 3 a 8').max(8, 'Tamanho deve ser entre 3 a 8').required('Required'),\n      cSenha: Yup.string().min(3, 'Tamanho deve ser entre 3 a 8').max(8, 'Tamanho deve ser entre 3 a 8').required('Required')\n    }),\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      if (values.senha === values.cSenha) {\n        try {\n          await api.post('/administrador', dataAdm, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          history.push('/');\n        } catch (err) {\n          alert('Erro no cadastro, tente novamente');\n        }\n      } else {\n        alert(\"Verifique se as senhas conferem!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tudoo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, ` body{\n                        background-color: #F4F4F4;\n                    }`)), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"headerAdm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaArrowLeft, {\n    color: \"white\",\n    size: 42,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inverter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Cadastre um novo\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 49\n    }\n  }), \"Adiministrador!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 75\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"O primeiro passo \\xE9 preencher esse formul\\xE1rio de cadastro.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabela\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrumarTabela\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"Dados da Pessoa\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Nome\",\n    name: \"nome\",\n    onBlur: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Email\",\n    name: \"email\",\n    onBlur: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"CPF\",\n    name: \"cpf\",\n    onBlur: e => setCpf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"RG\",\n    name: \"rg\",\n    onBlur: e => setRg(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Senha\",\n    name: \"senha\",\n    style: {\n      width: \"13vw\"\n    },\n    onBlur: e => setSenha(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Confirmar Senha\",\n    name: \"cSenha\",\n    style: {\n      width: \"13vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"together\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: FotoAviso,\n    alt: \"aviso\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Preencha todos \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 51\n    }\n  }), \" os campos\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"botao\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, \"Cadastrar\"))))));\n}\n\nexport default CadastroAdm;","map":{"version":3,"sources":["C:/Users/gugus/Desktop/Conectando/Sprint-3/conectando/src/pages/cadastroAdm/index.tsx"],"names":["React","useState","FaArrowLeft","Input","Helmet","Yup","useHistory","Axios","Formik","Form","CadastroAdm","nome","setNome","cpf","setCpf","rg","setRg","email","setEmail","senha","setSenha","history","dataAdm","api","create","baseURL","headers","authorization","localStorage","getItem","cSenha","object","string","max","required","length","min","values","setSubmitting","post","push","err","alert","e","target","value","display","justifyContent","width","FotoAviso"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { FaArrowLeft, FaArrowCircleDown } from 'react-icons/fa';\r\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\r\n\r\n// import Button from '../../components/Button';\r\nimport Input from '../../components/inputs/index';\r\nimport FotoAviso from '../../assets/images/Aviso.svg';\r\nimport Helmet from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport '../../global.css';\r\nimport './style.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { Formik, Form } from 'formik';\r\nimport Button from '../../components/Button';\r\n\r\n\r\nfunction CadastroAdm() {\r\n\r\n    const [nome, setNome] = useState(\"\");\r\n    const [cpf, setCpf] = useState(\"\");\r\n    const [rg, setRg] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [senha, setSenha] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const dataAdm = {\r\n        nome,\r\n        cpf,\r\n        rg,\r\n        email,\r\n        senha,\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const api = Axios.create({\r\n        baseURL: \"http://localhost:5000/api\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(\"token-conectando\")\r\n        }\r\n    })\r\n\r\n    return (\r\n\r\n        <Formik\r\n            initialValues={\r\n                {\r\n                    nome: '',\r\n                    email: '',\r\n                    senha: '',\r\n                    rg: '',\r\n                    cpf: '',\r\n                    cSenha: '',\r\n                }}\r\n            validationSchema={Yup.object({\r\n                nome: Yup.string()\r\n                    .max(15, 'Deve ter no máximo 15 caractéres')\r\n                    .required('Required'),\r\n                cpf: Yup.string()\r\n                    .length(11, 'CPF inválido')\r\n                    .required('Required'),\r\n                rg: Yup.string()\r\n                    .length(12, 'Tamanho inválido')\r\n                    .required('Required'),\r\n                email: Yup.string()\r\n                    .email('email inválido')\r\n                    .required('Required'),\r\n                senha: Yup.string()\r\n                    .min(3, 'Tamanho deve ser entre 3 a 8')\r\n                    .max(8, 'Tamanho deve ser entre 3 a 8')\r\n                    .required('Required'),\r\n                cSenha: Yup.string()\r\n                    .min(3, 'Tamanho deve ser entre 3 a 8')\r\n                    .max(8, 'Tamanho deve ser entre 3 a 8')\r\n                    .required('Required'),\r\n\r\n            })}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n                if (values.senha === values.cSenha) {\r\n                    try {\r\n                        await api.post('/administrador', dataAdm, {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            }\r\n                        })\r\n                        history.push('/');\r\n                    } catch (err) {\r\n                        alert('Erro no cadastro, tente novamente');\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Verifique se as senhas conferem!\")\r\n                }\r\n            }}\r\n        >\r\n\r\n            <div className=\"tudoo\" >\r\n                <Helmet>\r\n                    <style>\r\n                        {` body{\r\n                        background-color: #F4F4F4;\r\n                    }`}\r\n\r\n                    </style>\r\n                </Helmet>\r\n                <header className=\"headerAdm\">\r\n                    <div className=\"meio\">\r\n                        <div className=\"arrow\">\r\n                            <FaArrowLeft color=\"white\" size={42} />\r\n                        </div>\r\n                        <div className=\"inverter\">\r\n                            <h1>Cadastre um novo<br />Adiministrador!</h1><br />\r\n                            <h3>O primeiro passo é preencher esse formulário de cadastro.</h3>\r\n                        </div>\r\n                        <div className=\"tabela\">\r\n                            <div className=\"arrumarTabela\">\r\n\r\n\r\n                                <Form>\r\n                                    <h2>Dados da Pessoa</h2>\r\n                                    <div id=\"linha\"></div>\r\n                                    <Input label=\"Nome\" name=\"nome\" onBlur={(e) => setNome(e.target.value)} />\r\n                                    <Input label=\"Email\" name=\"email\" onBlur={(e) => setEmail(e.target.value)} />\r\n                                    <Input label=\"CPF\" name=\"cpf\" onBlur={(e) => setCpf(e.target.value)} />\r\n                                    <Input label=\"RG\" name=\"rg\" onBlur={(e) => setRg(e.target.value)} />\r\n                                    <div id=\"linha\">\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\", }}>\r\n                                        <Input label=\"Senha\" name=\"senha\" style={{ width: \"13vw\" }} onBlur={(e) => setSenha(e.target.value)} />\r\n                                        <Input label=\"Confirmar Senha\" name=\"cSenha\" style={{ width: \"13vw\", }} />\r\n                                    </div>\r\n                                    \r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"bottom\">\r\n                            <div id=\"together\">\r\n                                <img src={FotoAviso} alt=\"aviso\" />\r\n                                <p>Preencha todos <br /> os campos</p>\r\n                            </div>\r\n\r\n                            <button className=\"botao\" type=\"submit\">\r\n                                        Cadastrar\r\n                                    </button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        </Formik>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default CadastroAdm;"]},"metadata":{},"sourceType":"module"}