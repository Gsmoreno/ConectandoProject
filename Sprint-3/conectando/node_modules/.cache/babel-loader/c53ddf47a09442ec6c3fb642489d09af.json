{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\Ultimo Semestre\\\\Conectando\\\\Sprint-3\\\\conectando\\\\src\\\\pages\\\\CadastrarVagas\\\\index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiArrowLeft, FiAlertCircle } from 'react-icons/fi';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport Input from '../../components/inputs/index';\nimport './style.css';\nimport Axios from 'axios';\n\nfunction CadastrarVagas() {\n  const api = Axios.create({\n    baseURL: \"http://localhost:5000/api\",\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(\"token-conectando\")\n    }\n  });\n  useEffect(() => {\n    BuscarTags();\n  }, []);\n  var optionsBanco = []; //Formata um array para ser usado pelo react-select\n\n  const Montar = e => {\n    e.forEach(element => {\n      optionsBanco.push({\n        value: element.idTags,\n        label: element.nome\n      });\n    });\n  }; //Cadastrar TagVaga\n\n\n  const CadastrarTagVaga = idVaga => {\n    let tagsPorName = document.getElementsByName('tags');\n\n    for (let index = 0; index < tagsPorName.length; index++) {\n      const tagsVaga = {\n        idVaga: idVaga,\n        idTags: tagsPorName[index].attributes[2].value\n      };\n      api.post(\"/TagsVaga\", JSON.stringify(tagsVaga));\n    }\n  }; //Busca todas as tags\n\n\n  const BuscarTags = () => {\n    api.get(\"/Tags\").then(dados => {\n      Montar(dados.data);\n    }).catch(erro => console.error(erro));\n  }; //Cadastra as Vagas\n\n\n  const CadastrarVagas = values => {\n    api.post(\"/Vaga\", JSON.stringify(values, null, 2)).then(dados => {\n      CadastrarTagVaga(dados.data);\n    }).catch(erro => console.error(erro));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cadastroVagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    className: \"iconVoltar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textHeaderCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Cadaste sua Vaga!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"O primeiro passo \\xE9 preencher esse formul\\xE1rio de cadastro.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formularioCadastro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Seus dados\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divisao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      area: '',\n      requisitos: '',\n      detalhes: '',\n      beneficios: '',\n      salario: '',\n      tipoContrato: '',\n      nivelExp: '',\n      prazo: '',\n      limiteAlunos: '',\n      remoto: '',\n      horario: '',\n      idEmpresa: '',\n      uf: '',\n      cidade: '',\n      cep: '',\n      bairro: '',\n      rua: '',\n      numero: ''\n    },\n    validationSchema: Yup.object({\n      nome: Yup.string().required('Required'),\n      area: Yup.string().required('Required'),\n      requisitos: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\n      detalhes: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\n      beneficios: Yup.string().required('Required'),\n      salario: Yup.number().required('Required'),\n      tipoContrato: Yup.string().required('Required'),\n      nivelExp: Yup.string().required('Required'),\n      prazo: Yup.date().required('Required'),\n      limiteAlunos: Yup.number().notRequired(),\n      remoto: Yup.string().required('Required'),\n      horario: Yup.string().required('Required'),\n      idEmpresa: Yup.number(),\n      uf: Yup.string().required('Required'),\n      cidade: Yup.string().required('Required'),\n      cep: Yup.string().required('Required'),\n      bairro: Yup.string().required('Required'),\n      rua: Yup.string().required('Required'),\n      numero: Yup.string().required('Required'),\n      complemento: Yup.string().required('Required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      const token = localStorage.getItem('token-conectando');\n\n      if (token !== null) {\n        values.idEmpresa = JSON.parse(window.atob(token.split('.')[1])).jti;\n        console.log(values);\n      }\n\n      const id = CadastrarVagas(values);\n      setTimeout(() => {\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"nome\",\n    label: \"Nome da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"area\",\n    label: \"\\xC1rea da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Requisitos\",\n    as: \"textarea\",\n    name: \"requisitos\",\n    id: \"requisitos\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Detalhes Vaga\",\n    as: \"textarea\",\n    name: \"detalhes\",\n    id: \"detalhes\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"beneficios\",\n    label: \"Beneficios\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"0\",\n    name: \"salario\",\n    label: \"Sal\\xE1rio\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tipoContrato\",\n    label: \"Tipo de Contrato\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"nivelExp\",\n    label: \"N\\xEDvel da Vaga\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"prazo\",\n    type: \"date\",\n    label: \"Prazo inscri\\xE7\\xF5es\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"0\",\n    name: \"limiteAlunos\",\n    label: \"Limite inscri\\xE7\\xF5es\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"remoto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"Trabalhar remoto?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 82\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: \"select\",\n    name: \"remoto\",\n    id: \"remoto\",\n    className: \"input1 input1-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, \"Selecione uma op\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, \"Sim\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, \"N\\xE3o\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"remoto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    name: \"horario\",\n    label: \"Hor\\xE1rio\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"style-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    name: \"tags\",\n    isMulti: true,\n    options: optionsBanco,\n    id: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    name: \"cep\",\n    type: \"number\",\n    label: \"CEP\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"uf\",\n    label: \"UF\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"cidade\",\n    label: \"Cidade\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"bairro\",\n    label: \"Bairro\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"rua\",\n    label: \"Rua\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-divs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"numero\",\n    type: \"number\",\n    label: \"N\\xFAmero\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"complemento\",\n    label: \"Complemento\",\n    className: \"input1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alerta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    className: \"alertaCirculo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, \"Preencha todos os campos\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttonEnviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, \"Cadastrar\"))))));\n}\n\nexport default CadastrarVagas;","map":{"version":3,"sources":["C:/Users/Lucas/Desktop/Ultimo Semestre/Conectando/Sprint-3/conectando/src/pages/CadastrarVagas/index.tsx"],"names":["React","useEffect","FiArrowLeft","FiAlertCircle","Formik","Field","Form","ErrorMessage","Yup","Select","Input","Axios","CadastrarVagas","api","create","baseURL","headers","authorization","localStorage","getItem","BuscarTags","optionsBanco","Montar","e","forEach","element","push","value","idTags","label","nome","CadastrarTagVaga","idVaga","tagsPorName","document","getElementsByName","index","length","tagsVaga","attributes","post","JSON","stringify","get","then","dados","data","catch","erro","console","error","values","area","requisitos","detalhes","beneficios","salario","tipoContrato","nivelExp","prazo","limiteAlunos","remoto","horario","idEmpresa","uf","cidade","cep","bairro","rua","numero","object","string","required","max","number","date","notRequired","complemento","setSubmitting","token","parse","window","atob","split","jti","log","id","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { FiArrowLeft, FiAlertCircle } from 'react-icons/fi';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select, { OptionsType } from 'react-select';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Input from '../../components/inputs/index';\r\n\r\nimport './style.css';\r\nimport { FaTags } from 'react-icons/fa';\r\nimport { valueScaleCorrection } from 'framer-motion/types/render/dom/layout/scale-correction';\r\nimport Axios from 'axios';\r\n\r\nfunction CadastrarVagas() {\r\n\r\n    const api = Axios.create({\r\n        baseURL: \"http://localhost:5000/api\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(\"token-conectando\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        BuscarTags();\r\n    }, [])\r\n\r\n    var optionsBanco: { value: any; label: any; }[] = []\r\n\r\n\r\n    //Formata um array para ser usado pelo react-select\r\n    const Montar = (e: any) => {\r\n        e.forEach((element: { idTags: any; nome: any; }) => {\r\n            optionsBanco.push({ value: element.idTags, label: element.nome });\r\n        });\r\n    }\r\n\r\n    //Cadastrar TagVaga\r\n    const CadastrarTagVaga = (idVaga: any) => {\r\n        let tagsPorName = document.getElementsByName('tags');\r\n        for (let index = 0; index < tagsPorName.length; index++) {\r\n\r\n            const tagsVaga = { idVaga: idVaga, idTags: tagsPorName[index].attributes[2].value }\r\n\r\n            api.post(\"/TagsVaga\", JSON.stringify(tagsVaga))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    //Busca todas as tags\r\n    const BuscarTags = () => {\r\n\r\n        api.get(\"/Tags\")\r\n            .then(dados => {\r\n                Montar(dados.data)\r\n            })\r\n            .catch(erro => console.error(erro));\r\n    }\r\n\r\n\r\n    //Cadastra as Vagas\r\n    const CadastrarVagas = (values: any) => {\r\n\r\n        api.post(\"/Vaga\", JSON.stringify(values, null, 2))\r\n            .then(dados => {\r\n                CadastrarTagVaga(dados.data)\r\n            })\r\n            .catch(erro => console.error(erro));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cadastroVagas\">\r\n            <div className=\"headerCadastro\">\r\n                <FiArrowLeft className=\"iconVoltar\" />\r\n\r\n                <div className=\"textHeaderCadastro\">\r\n                    <h1>Cadaste sua Vaga!</h1>\r\n                    <p>O primeiro passo é preencher esse formulário de cadastro.</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"formularioCadastro\">\r\n                <h2>Seus dados</h2>\r\n\r\n                <div className=\"divisao\"></div>\r\n\r\n                <Formik\r\n                    initialValues={\r\n                        {\r\n                            nome: '',\r\n                            area: '',\r\n                            requisitos: '',\r\n                            detalhes: '',\r\n                            beneficios: '',\r\n                            salario: '',\r\n                            tipoContrato: '',\r\n                            nivelExp: '',\r\n                            prazo: '',\r\n                            limiteAlunos: '',\r\n                            remoto: '',\r\n                            horario: '',\r\n                            idEmpresa: '',\r\n\r\n                            uf: '',\r\n                            cidade: '',\r\n                            cep: '',\r\n                            bairro: '',\r\n                            rua: '',\r\n                            numero: ''\r\n\r\n                        }}\r\n                    validationSchema={Yup.object({\r\n                        nome: Yup.string().required('Required'),\r\n                        area: Yup.string().required('Required'),\r\n                        requisitos: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\r\n                        detalhes: Yup.string().required('Required').max(255, 'Deve ter no máximo 255 caractéres'),\r\n                        beneficios: Yup.string().required('Required'),\r\n                        salario: Yup.number().required('Required'),\r\n                        tipoContrato: Yup.string().required('Required'),\r\n                        nivelExp: Yup.string().required('Required'),\r\n                        prazo: Yup.date().required('Required'),\r\n                        limiteAlunos: Yup.number().notRequired(),\r\n                        remoto: Yup.string().required('Required'),\r\n                        horario: Yup.string().required('Required'),\r\n                        idEmpresa: Yup.number(),\r\n                        uf: Yup.string().required('Required'),\r\n                        cidade: Yup.string().required('Required'),\r\n                        cep: Yup.string().required('Required'),\r\n                        bairro: Yup.string().required('Required'),\r\n                        rua: Yup.string().required('Required'),\r\n                        numero: Yup.string().required('Required'),\r\n                        complemento: Yup.string().required('Required'),\r\n\r\n                    })}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        const token = localStorage.getItem('token-conectando');\r\n                        if (token !== null) {\r\n                            values.idEmpresa = JSON.parse(window.atob(token.split('.')[1])).jti\r\n                            console.log(values);\r\n                        }\r\n                        const id = CadastrarVagas(values);\r\n                        setTimeout(() => {\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <Input name=\"nome\" label=\"Nome da Vaga\" className=\"input1\" />\r\n\r\n                        <Input name=\"area\" label=\"Área da Vaga\" className=\"input1\" />\r\n\r\n                        <Input label=\"Requisitos\" as=\"textarea\" name=\"requisitos\" id=\"requisitos\" className=\"input1\" />\r\n\r\n                        <Input label=\"Detalhes Vaga\" as=\"textarea\" name=\"detalhes\" id=\"detalhes\" className=\"input1\" />\r\n\r\n                        <Input name=\"beneficios\" label=\"Beneficios\" className=\"input1\" />\r\n\r\n                        <Input type=\"number\" min=\"0\" name=\"salario\" label=\"Salário\" className=\"input1\" />\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"tipoContrato\" label=\"Tipo de Contrato\" className=\"input1\" />\r\n                            <Input name=\"nivelExp\" label=\"Nível da Vaga\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"prazo\" type=\"date\" label=\"Prazo inscrições\" className=\"input1\" />\r\n                            <Input type=\"number\" min=\"0\" name=\"limiteAlunos\" label=\"Limite inscrições\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-divs\">\r\n                            <div className=\"style-input\">\r\n                                <label htmlFor=\"remoto\">Trabalhar remoto?</label><br />\r\n                                <Field as=\"select\" name=\"remoto\" id=\"remoto\" className=\"input1 input1-select\">\r\n                                    <option value=\"\">Selecione uma opção</option>\r\n                                    <option value=\"sim\">Sim</option>\r\n                                    <option value=\"nao\">Não</option>\r\n                                </Field>\r\n                                <div className=\"error-message\">\r\n                                    <ErrorMessage name=\"remoto\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Input name=\"horario\" label=\"Horário\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"style-input\">\r\n                            <label htmlFor=\"tags\">Tags</label><br />\r\n                            <Select\r\n                                className=\"basic-single\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"tags\"\r\n                                isMulti\r\n                                options={optionsBanco}\r\n                                id=\"tags\"\r\n                            />\r\n                            <div className=\"error-message\">\r\n                                <ErrorMessage name=\"tags\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Input name=\"cep\" type=\"number\" label=\"CEP\" className=\"input1\" />\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"uf\" label=\"UF\" className=\"input1\" />\r\n                            <Input name=\"cidade\" label=\"Cidade\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <Input name=\"bairro\" label=\"Bairro\" className=\"input1\" />\r\n                        <Input name=\"rua\" label=\"Rua\" className=\"input1\" />\r\n\r\n                        <div className=\"form-divs\">\r\n                            <Input name=\"numero\" type=\"number\" label=\"Número\" className=\"input1\" />\r\n                            <Input name=\"complemento\" label=\"Complemento\" className=\"input1\" />\r\n                        </div>\r\n\r\n                        <div className=\"div-Enviar\">\r\n                            <div className=\"alerta\">\r\n                                <FiAlertCircle className=\"alertaCirculo\" />\r\n                                <p>Preencha todos os campos</p>\r\n                            </div>\r\n\r\n                            <button type='submit' className=\"buttonEnviar\">Cadastrar</button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CadastrarVagas;"]},"metadata":{},"sourceType":"module"}